<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JCaptcha, the open source java framework for captcha definition and integration
  ~ Copyright (c)  2007 jcaptcha.net. All Rights Reserved.
  ~ See the LICENSE.txt file distributed with this package.
  -->

<!--
  ~ jcaptcha, the open source java framework for captcha definition and integration
  ~ copyright (c)  2007 jcaptcha.net. All Rights Reserved.
  ~ See the LICENSE.txt file distributed with this package.
  -->

<!DOCTYPE beans SYSTEM "http://www.springframework.org/dtd/spring-beans.dtd">
<!-- ==========================================================================
*     SPRING BEAN DEFINITION FILE
*     Javaworld Article - Simple Sequence Workflow Example
  ========================================================================== -->
<beans>

    <bean id="sphere" class="com.jhlabs.image.SphereFilter">
        <property name="refractionIndex">
            <value>1</value>
        </property>
    </bean>

    <bean id="emboss" class="com.jhlabs.image.EmbossFilter">
    </bean>

    <bean id="rippleBack" class="com.jhlabs.image.RippleFilter">
        <property name="XAmplitude">
            <value>5</value>
        </property>
        <property name="YAmplitude">
            <value>5</value>
        </property>
        <property name="XWavelength">
            <value>10</value>
        </property>
        <property name="YWavelength">
            <value>10</value>
        </property>
        <property name="edgeAction">
            <value>1</value>
        </property>
    </bean>

    <bean id="ripple" class="com.jhlabs.image.RippleFilter">
        <property name="waveType">
            <value>3</value>
        </property>
        <property name="XAmplitude">
            <value>5</value>
        </property>
        <property name="YAmplitude">
            <value>5</value>
        </property>
        <property name="XWavelength">
            <value>10</value>
        </property>
        <property name="YWavelength">
            <value>10</value>
        </property>
        <property name="edgeAction">
            <value>1</value>
        </property>
    </bean>

    <bean id="twirl" class="com.jhlabs.image.TwirlFilter">
        <property name="angle">
            <value>0</value>
        </property>
    </bean>

    <bean id="water" class="com.jhlabs.image.WaterFilter">
        <property name="amplitude">
            <value>1</value>
        </property>
        <property name="antialias">
            <value>true</value>
        </property>
        <property name="wavelength">
            <value>30</value>
        </property>
    </bean>

    <bean id="weaves" class="com.jhlabs.image.WeaveFilter">
        <property name="useImageColors">
            <value>true</value>
        </property>
    </bean>

    <bean id="crystal" class="com.jhlabs.image.CrystalizeFilter">
        <property name="scale">
            <value>1</value>
        </property>
        <property name="gridType">
            <value>0</value>
        </property>
        <property name="fadeEdges">
            <value>false</value>
        </property>
        <property name="edgeThickness">
            <value>1</value>
        </property>
        <property name="randomness">
            <value>1</value>
        </property>
    </bean>

    <bean id="rippleDef" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="ripple"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="waterDef" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="water"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="embossDef" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="emboss"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="rippleDefBack" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="rippleBack"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="cristalDef" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="crystal"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="weavesDef" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <list>
                <ref bean="weaves"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="none" class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
        <constructor-arg index="0">
            <null/>
        </constructor-arg>
    </bean>

    <bean id="colorGenRandom" class="com.octo.captcha.component.image.color.RandomRangeColorGenerator">
        <constructor-arg index="0">
            <list>
                <value>150</value>
                <value>255</value>
            </list>
        </constructor-arg>
        <constructor-arg index="1">
            <list>
                <value>200</value>
                <value>255</value>
            </list>
        </constructor-arg>
        <constructor-arg index="2">
            <list>
                <value>200</value>
                <value>255</value>
            </list>
        </constructor-arg>
        <constructor-arg index="3">
            <list>
                <value>180</value>
                <value>210</value>
            </list>
        </constructor-arg>
    </bean>


    <bean id="path" class="java.lang.String">
        <constructor-arg>
            <value>C:\DEV\PROJETS\jCaptcha\jcaptcha\engine\src\conf\gimpybackgrounds</value>
        </constructor-arg>

    </bean>

    <bean id="filter1" class="com.octo.captcha.component.image.fontgenerator.TwistedAndShearedRandomFontGenerator">
        <constructor-arg index="0">
            <value>40</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>40</value>
        </constructor-arg>
    </bean>

    <bean id="filter2" class="com.octo.captcha.component.image.backgroundgenerator.FileReaderRandomBackgroundGenerator">
        <constructor-arg index="0">
            <value>200</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>100</value>
        </constructor-arg>
        <constructor-arg index="2">
            <ref bean="path"/>
        </constructor-arg>
    </bean>

    <bean id="filter3" class="com.octo.captcha.component.image.textpaster.BaffleRandomTextPaster">
        <constructor-arg type="java.lang.Integer" index="0">
            <value>6</value>
        </constructor-arg>
        <constructor-arg type="java.lang.Integer" index="1">
            <value>8</value>
        </constructor-arg>
        <constructor-arg type="com.octo.captcha.component.image.color.ColorGenerator" index="2">
            <ref bean="colorGenRandom"/>
        </constructor-arg>
        <constructor-arg index="3">
            <value>true</value>
        </constructor-arg>
        <constructor-arg index="4">
            <value>2</value>
        </constructor-arg>
        <constructor-arg type="com.octo.captcha.component.image.color.ColorGenerator" index="5">
            <ref bean="colorGenRandom"/>
        </constructor-arg>
    </bean>

    <bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.DeformedComposedWordToImage">
        <constructor-arg index="0">
            <ref bean="filter1"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="filter2"/>
        </constructor-arg>
        <constructor-arg index="2">
            <ref bean="filter3"/>
        </constructor-arg>
        <constructor-arg index="3">
            <ref bean="weavesDef"/>
        </constructor-arg>
        <constructor-arg index="4">
            <ref bean="none"/>
        </constructor-arg>
        <constructor-arg index="5">
            <ref bean="none"/>
        </constructor-arg>
    </bean>

    <bean id="wordtoimage2" class="com.octo.captcha.component.image.wordtoimage.DeformedComposedWordToImage">
        <constructor-arg index="0">
            <ref bean="filter1"/>
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="filter2"/>
        </constructor-arg>
        <constructor-arg index="2">
            <ref bean="filter3"/>
        </constructor-arg>
        <constructor-arg index="3">
            <ref bean="rippleDefBack"/>
        </constructor-arg>
        <constructor-arg index="4">
            <ref bean="cristalDef"/>
        </constructor-arg>
        <constructor-arg index="5">
            <ref bean="rippleDef"/>
        </constructor-arg>
    </bean>


    <bean id="filedict" class="com.octo.captcha.component.word.FileDictionary">
        <constructor-arg index="0">
            <value>toddlist</value>
        </constructor-arg>
    </bean>

    <bean id="wordgen" class="com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator">
        <constructor-arg>
            <ref bean="filedict"/>
        </constructor-arg>
    </bean>

    <bean id="factory" class="com.octo.captcha.image.gimpy.GimpyFactory">
        <constructor-arg>
            <ref bean="wordgen"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="wordtoimage"/>
        </constructor-arg>
    </bean>

    <bean id="factory1" class="com.octo.captcha.image.gimpy.GimpyFactory">
        <constructor-arg>
            <ref bean="wordgen"/>
        </constructor-arg>
        <constructor-arg>
            <ref bean="wordtoimage2"/>
        </constructor-arg>
    </bean>

</beans>

